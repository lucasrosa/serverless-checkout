service: serverless-checkout

frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x
  memorySize: 128
  timeout: 5
  
#  stage: dev
  region: us-east-1
  environment:
        TABLE_NAME: orders-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - sqs:*
      Resource:
        - Fn::GetAtt:
          - PaymentQueue
          - Arn
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::GetAtt:
          - OrderDynamoDbTable
          - Arn

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
  checkout:
    handler: bin/checkout
    events:
      - http:
          path: checkout
          method: post
          cors: true
  process:
    handler: bin/process
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PaymentQueue
              - Arn    
resources:
  Resources:
    PaymentQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "PaymentQueue"    
    OrderDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S  
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: email
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'orders-${opt:stage, self:provider.stage}'
